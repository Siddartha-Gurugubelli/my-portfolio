name: Sync Blog and Prepare Build

on:
  push:
    branches:
      - main
    paths:
      - 'package.json'
      - 'scripts/sdk-versions.json'

permissions:
  contents: write  # Needed for creating tags and uploading release assets

jobs:
  sync-blog-and-build:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repo
      - name: Checkout portfolio repo
        uses: actions/checkout@v3

      # 2. Setup Node.js
      - name: Use Node.js 20.x
        uses: actions/setup-node@v3
        with:
          node-version: 20

      # 3. Install dependencies
      - name: Install dependencies
        run: npm install

      # 4. Run combined blog sync and build
      - name: Run build and blog sync
        run: npm run build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 5. Extract version from package.json and set BLOG_VERSION
      - name: Set BLOG_VERSION env variable from package.json
        run: |
          VERSION=$(jq -r '.version' package.json)
          echo "BLOG_VERSION=$VERSION" >> $GITHUB_ENV

      # 6. Zip the dist folder
      - name: Zip dist folder
        run: |
          cd dist
          zip -r ../dist.zip .

      # 7. Create Git tag if not already exists
      - name: Create Git tag for release
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag "v${BLOG_VERSION}" || echo "Tag already exists"
          git push origin "v${BLOG_VERSION}"
        env:
          BLOG_VERSION: ${{ env.BLOG_VERSION }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 8. Upload zip to GitHub Release
      - name: Upload dist.zip to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.BLOG_VERSION }}
          name: "Site Build v${{ env.BLOG_VERSION }}"
          files: dist.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
